name: Branch - Undeploy App

on:
  deployment_status

jobs:
  print:
    name: Print Infos
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Print Deploy Status
        run: |
          echo "state: ${{ github.event.deployment_status.state }}"
          echo "environment: ${{ github.event.deployment.environment }}"
  
  destroy:
    name: Undeploy Application
    runs-on: ubuntu-latest
    
    if: github.event.deployment_status.state == 'failure' && contains(github.event.deployment.environment, 'dev')

    timeout-minutes: 5

    env:
      AKS_RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }} # e.g. 'aks_cicd_dev_rg'
      AKS_NAME: ${{ secrets.AKS_NAME }} # e.g. 'akscicddev-aks-b1ce1'
      AKS_APP_NAMESPACE: ${{ github.event.deployment.environment }}

    steps:
      - uses: actions/checkout@master
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SUBSCRIPTION }}
      - name: AZ AKS Login
        run: az aks get-credentials --resource-group ${{ env.AKS_RESOURCE_GROUP }} --name ${{ env.AKS_NAME }} --overwrite-existing --admin
        shell: bash
      - name: Run Helm Delete
        working-directory: application/helm-charts
        run: ./helm_undeploy_all.ps1 -Namespace "${{ env.AKS_APP_NAMESPACE }}"
        shell: pwsh
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_SUBSCRIPTION }}
      - name: Remove Environment
        if: success()
        uses: actions/github-script@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log(`Removing Deployment after Helm Delete: ${context.payload.deployment.id}:${context.payload.deployment.environment}`);

            await github.repos.deleteDeployment({
              ...context.repo,
              deployment_id: context.payload.deployment.id
            });
